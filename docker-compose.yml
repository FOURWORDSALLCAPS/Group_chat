services:
  main_app:
    container_name: main_app
    hostname: main_app
    build:
      context: .
      dockerfile: src/Dockerfile
    restart: on-failure
    env_file:
      - ./src/.env
    ports:
      - "8080:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - groupnet

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:15.6-bullseye
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5445:5432"
    volumes:
      - ./postgres/migrations:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - groupnet

volumes:
  postgres:

networks:
  groupnet:
    name: chat
    driver: bridge
